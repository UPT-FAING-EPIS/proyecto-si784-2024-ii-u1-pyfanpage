name: Tarea Automatizada de análisis de código

env:
  SONAR_ORG: 'pyfanpage'
  SONAR_PROJECT: 'pyfanpage'

on:
  push:
    branches: ["13-aplicar-sonarqube"]
  workflow_dispatch:

jobs:
  sonar_scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Build and Run SonarCloud Scanner
        run: |
          docker run --rm -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -v ${GITHUB_WORKSPACE}:/usr/src \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=${{ env.SONAR_PROJECT }} \
          -Dsonar.organization=${{ env.SONAR_ORG }} \
          -Dsonar.sources=src \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.branch.name=13-aplicar-sonarqube

      - name: Wait for SonarCloud analysis to finish
        run: |
          sleep 30  # Esperar a que el análisis se complete

      - name: Fetch Vulnerabilities
        run: |
          echo "## Vulnerabilities Detected"
          echo "| Message | Severity | Component | Line | Status |"
          echo "|---------|----------|-----------|------|--------|"
          curl -u "${{ secrets.SONAR_TOKEN }}: " "https://sonarcloud.io/api/issues/search?componentKeys=${{ env.SONAR_PROJECT }}&types=VULNERABILITY" \
          | jq -r '.issues[] | "| \(.message) | \(.severity) | \(.component) | \(.line) | \(.status) |"'

      - name: Fetch Code Smells
        run: |
          echo "## Code Smells Detected"
          echo "| Message | Severity | Component | Line | Status |"
          echo "|---------|----------|-----------|------|--------|"
          curl -u "${{ secrets.SONAR_TOKEN }}: " "https://sonarcloud.io/api/issues/search?componentKeys=${{ env.SONAR_PROJECT }}&types=CODE_SMELL" \
          | jq -r '.issues[] | "| \(.message) | \(.severity) | \(.component) | \(.line) | \(.status) |"'
