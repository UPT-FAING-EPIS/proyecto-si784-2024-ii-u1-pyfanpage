name: Tarea Automatizada de an치lisis de c칩digo

env:
  SONAR_ORG: 'pyfanpage'
  SONAR_PROJECT: 'pyfanpage'

on:
  push:
    branches:
      - "13-aplicar-sonarqube"
  workflow_dispatch:

jobs:
  sonar_scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Build and Run SonarCloud Scanner
        run: |
          docker run --rm -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -v ${GITHUB_WORKSPACE}:/usr/src \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=${{ env.SONAR_PROJECT }} \
          -Dsonar.organization=${{ env.SONAR_ORG }} \
          -Dsonar.sources=src \
          -Dsonar.host.url=https://sonarcloud.io

      - name: Obtener estado del an치lisis
        id: sonar_status
        run: |
          ANALYSIS_JSON=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ env.SONAR_PROJECT }}")
          echo "ANALYSIS_JSON=${ANALYSIS_JSON}" >> $GITHUB_ENV

      - name: Obtener problemas del an치lisis
        id: sonar_issues
        run: |
          ISSUES_JSON=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/issues/search?componentKeys=${{ env.SONAR_PROJECT }}")
          echo "ISSUES_JSON=${ISSUES_JSON}" >> $GITHUB_ENV

      - name: Generar reporte HTML
        run: |
          echo "<html><head><title>Reporte de SonarCloud</title></head><body>" > sonar_report.html
          echo "<h1>Reporte de Calidad para ${{ env.SONAR_PROJECT }}</h1>" >> sonar_report.html
          STATUS=$(echo "$ANALYSIS_JSON" | jq -r '.projectStatus.status')
          echo "<p>Estado: $STATUS</p>" >> sonar_report.html
          echo "<h2>Problemas Encontrados:</h2><ul>" >> sonar_report.html
          echo "$ISSUES_JSON" | jq -c '.issues[]' | while read -r issue; do
            ISSUE_MSG=$(echo "$issue" | jq -r '.message')
            ISSUE_SEVERITY=$(echo "$issue" | jq -r '.severity')
            echo "<li>[$ISSUE_SEVERITY] $ISSUE_MSG</li>" >> sonar_report.html
          done
          echo "</ul></body></html>" >> sonar_report.html

      - name: Comprimir el reporte
        run: |
          zip sonar_report.zip sonar_report.html

      - name: Subir reporte como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: sonar-report
          path: sonar_report.zip
