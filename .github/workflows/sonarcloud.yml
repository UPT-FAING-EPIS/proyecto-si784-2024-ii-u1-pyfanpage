name: Tarea Automatizada de ejecuciÃ³n de pruebas

env:
  PHP_VERSION: '8.2'
  SONAR_ORG: 'pyfanpage'
  SONAR_PROJECT: 'pyfanpage'

on:
  push:
    branches: ["13-aplicar-sonarqube"]
  workflow_dispatch:

jobs:
  setup_and_test:
    name: Setup and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug

      - name: Instalar dependencias
        run: cd src && composer install --prefer-dist --no-progress

      - name: Hacer ejecutable PHPUnit
        run: cd src && chmod +x vendor/bin/phpunit

      - name: Ejecutar pruebas con PHPUnit
        run: cd src && vendor/bin/phpunit --configuration phpunit.xml --coverage-clover coverage.xml --coverage-html coverage-report

      - name: Check coverage report
        run: ls -l src/coverage-report

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: src/coverage.xml

      - name: Create reports directory
        run: mkdir -p src/features/bootstrap/reports

      - name: Give execute permission to Behat
        run: cd src && chmod +x vendor/bin/behat

      - name: Run Behat tests
        run: cd src && vendor/bin/behat --format=html --out features/bootstrap/reports/index.html

      - name: Upload Behat HTML report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: behat-report
          path: src/features/bootstrap/reports/index.html

      - name: Deploy Behat HTML report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GIT_TOKEN }}
          publish_branch: bddreporte
          publish_dir: src/features/bootstrap/reports

      - name: Deploy coverage report to cvgreporte branch
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GIT_TOKEN }}
          publish_branch: cvgreporte
          publish_dir: src/coverage-report

  sonar_scan:
    name: SonarQube Scan
    needs: setup_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download and configure SonarScanner
        run: |
          curl -sSLo sonarscanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonarscanner.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner
          echo "PATH=$PATH:$(pwd)/sonar-scanner/bin" >> $GITHUB_ENV

      - name: Download coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT }} \
            -Dsonar.organization=${{ env.SONAR_ORG }} \
            -Dsonar.sources=src \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.php.coverage.reportPaths=coverage.xml
