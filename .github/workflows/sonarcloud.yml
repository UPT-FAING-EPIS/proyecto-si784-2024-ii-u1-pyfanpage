name: SonarCloud Scan & Semgrep Analysis
on: [push, pull_request]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Create reports directory
        run: mkdir -p reports

      - name: Build and Run SonarCloud Scanner
        run: |
          docker run --rm -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -v ${GITHUB_WORKSPACE}:/usr/src \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=pyfanpage \
          -Dsonar.organization=pyfanpage \
          -Dsonar.php.coverage.reportPaths=coverage.xml \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.issuesReport.html.enable=true \
          -Dsonar.issuesReport.html.location=./reports/sonar-report.html

      - name: Check SonarCloud Scanner output
        run: |
          # Verificar la salida del escáner aquí
          echo "Checking output..."

      - name: List files in reports directory
        run: ls -la reports/

      - name: Wait for SonarCloud analysis to finish
        run: |
          sleep 30  # Esperar a que el análisis se complete

      - name: Fetch Vulnerabilities
        run: |
          echo "## Vulnerabilities Detected"
          echo "| Message | Severity | Component | Line | Status |"
          curl -u "${{ secrets.SONAR_TOKEN }}: " "https://sonarcloud.io/api/issues/search?componentKeys=pyfanpage&types=VULNERABILITY" \
          | jq -r '.issues[] | "| \(.message) | \(.severity) | \(.component) | \(.line) | \(.status) |"'

      - name: Commit and Push HTML Report
        run: |
          git config --global user.name "JosueUPT"
          git config --global user.email "actions@github.com"
          git add reports/sonar-report.html
          git commit -m "Add SonarCloud report"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Semgrep
        run: |
          python -m pip install semgrep

      - name: Semgrep Analysis
        run: |
          semgrep scan --config='p/default' --sarif --output=report.sarif
          echo "Scan Summary:"
          semgrep scan --config='p/default' --json | jq '.results[] | {language: .language, path: .path, message: .extra.message}'
