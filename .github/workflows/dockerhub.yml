name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Get the version number
      id: vars
      run: echo "VERSION=1.0.$(git rev-list --count HEAD)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }}

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Get the latest Docker image tag
      id: get_latest_tag
      run: |
        TAGS_JSON=$(curl -s "https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage/tags/")
        LATEST_TAG=$(echo $TAGS_JSON | jq -r '.results | sort_by(.last_updated) | last | .name')
        echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
        echo "Latest tag found: ${LATEST_TAG}"

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.LATEST_TAG }}
        release_name: Release ${{ env.LATEST_TAG }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Deploy the latest Docker image
      run: |
        echo "Pulling image: ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }}"
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }}
        docker run -d -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }}
