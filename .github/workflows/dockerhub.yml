name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Get the version number
      id: vars
      run: echo "VERSION=1.0.$(git rev-list --count HEAD)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:${{ env.VERSION }}

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push  # Asegúrate de que este job se ejecute después del anterior
    steps:
    - name: Get the latest Docker image tag
      id: get_latest_tag
      run: |
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage
        echo "LATEST_TAG=$(docker images --filter=reference='${{ secrets.DOCKERHUB_USERNAME }}/pgfanpage:*' --format '{{.Tag}}' | sort -V | tail -n 1)" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.LATEST_TAG }}  # Usa la etiqueta obtenida
        release_name: Release ${{ env.LATEST_TAG }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
